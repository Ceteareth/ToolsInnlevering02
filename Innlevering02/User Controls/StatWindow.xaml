<UserControl x:Class="Innlevering02.User_Controls.StatWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:innlevering02="clr-namespace:Innlevering02"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             DataContext="{Binding Properties, Source={StaticResource Locator}}">
            <!-- Gets the datacontext from the locator, trying to find "Properties" -->
    
    <UserControl.Resources>
        <!-- This template is selected for everything that isn't a bool. -->
        <DataTemplate x:Key="DefaultDataTemplate">
            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" FontWeight="Bold"  />
                <TextBox Grid.Column="1" Text="{Binding Value }" />
            </Grid>
        </DataTemplate>
        
        <!-- This template is selected for boolean property types. -->
        <DataTemplate x:Key="BooleanDataTemplate">
            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                <CheckBox Grid.Column="1" IsChecked="{Binding Value }" />
            </Grid>
        </DataTemplate>
        
        <!-- Starts an instance of the template selector mentioned 
        which determines if a property should be displayed with a textbox or checkbox -->
        <innlevering02:PropertyDataTemplateSelector x:Key="TemplateSelector"
              DefaultDataTemplate="{StaticResource DefaultDataTemplate}"
              BooleanDataTemplate="{StaticResource BooleanDataTemplate}" />
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Attributes" VerticalAlignment="Center"/>
            
            <!-- Binds the itemsource of the listbox to the property collection, so everything is 
            displayed nicely. The choice of text/checkbox is done with datatemplates. See 
            PropertyDataTemplateSelector.cs or over. -->
            <ListBox Grid.Column="0" ItemsSource="{Binding CurrentEntityProperties}" Grid.IsSharedSizeScope="True" 
                 HorizontalContentAlignment="Stretch" 
                 ItemTemplateSelector="{StaticResource TemplateSelector}" />
        </Grid>
        
        <!-- Helpful information for the user -->
        <Grid Column="1">
            
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            
            <Grid Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Background="White">Helpful info</Label>
                <TextBox IsReadOnly="True" TextWrapping="Wrap" Grid.Row="1" Background="White" Text="{Binding CurrentInfoString}" />
            </Grid>
            
            <Grid Row="1">
                <TextBox IsReadOnly="True" TextWrapping="Wrap">
                    Unfortunately, the view will not update on tab changes.
                    This will be fixed in the next update.
                </TextBox>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
